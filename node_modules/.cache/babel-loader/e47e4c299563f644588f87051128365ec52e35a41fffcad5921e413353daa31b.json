{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdur\\\\Downloads\\\\React\\\\textt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport About from './components/About';\nimport './Appa.css';\nimport Navbar from './components/Navbar';\nimport { useState } from 'react';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router,Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const removeBodyClass = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-danger');\n  };\n  const togglemode = cls => {\n    removeBodyClass();\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showalert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'Dark Mode enabled';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode has been enabled\", \"success\");\n      document.title = 'Light Mode enabled';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextItils\",\n      mode: mode,\n      togglemode: togglemode,\n      removeBodyClass: removeBodyClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showalert: showalert,\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"8rwBrJ/rqqSqXthSXhFMa8B8AiM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","useState","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setalert","showalert","message","type","msg","setTimeout","removeBodyClass","document","body","classList","remove","togglemode","cls","style","backgroundColor","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/abdur/Downloads/React/textt/src/App.js"],"sourcesContent":["import About from './components/About';\nimport './Appa.css';\nimport Navbar from './components/Navbar';\nimport { useState } from 'react';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router,Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const removeBodyClass = () => {\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-danger');\n  }\n\n  const togglemode = (cls) => {\n    removeBodyClass();\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showalert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'Dark Mode enabled';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode has been enabled\", \"success\");\n      document.title = 'Light Mode enabled';\n    }\n  }\n  \n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextItils\" mode={mode} togglemode={togglemode} removeBodyClass={removeBodyClass}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route path=\"/about\" element={<About/>}> */}\n            {/* </Route> */}\n            {/* <Route path=\"/\" element={<TextForm showalert={showalert} heading=\"Enter the text to analyze below\" mode={mode}/>}> */}\n            <TextForm showalert={showalert} heading=\"Enter the text to analyze below\" mode={mode}/>\n            {/* </Route> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}