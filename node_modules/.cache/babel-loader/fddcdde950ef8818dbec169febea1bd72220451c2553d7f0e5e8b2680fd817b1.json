{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdur\\\\Downloads\\\\React\\\\textt\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showalert(\"converted to uppercase\", \"success\");\n  };\n  const handleloClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showalert(\"converted to lowerCase\", \"success\");\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const handleClear = () => {\n    setText('');\n    props.showalert(\"Text all clear\", \"success\");\n  };\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(' '));\n    props.showalert(\"Removed extra spaces\", \"success\");\n    document.title = 'Extra Spaces removed';\n  };\n  const textTRIM = () => {\n    let words = text.trim();\n    let word_Length;\n    if (words.length === 0) {\n      word_Length = 0;\n    } else {\n      word_Length = words.split(\"\").length;\n    }\n    props.showalert(\"trimming spaces\", \"success\");\n    return word_Length;\n  };\n  const [text, setText] = useState('Enter text here');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"myBox\",\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#333' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          value: text,\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleloClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handleExtraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: textTRIM,\n        children: \"Trimming Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").filter(element => {\n          return element !== \"\";\n        }).length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","showalert","handleloClick","handleOnChange","event","target","value","handleClear","handleExtraSpaces","split","join","document","title","textTRIM","words","trim","word_Length","length","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","backgroundColor","rows","onClick","filter","element","_c","$RefreshReg$"],"sources":["C:/Users/abdur/Downloads/React/textt/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to uppercase\", \"success\");\r\n  };\r\n  const handleloClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to lowerCase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  \r\n  };\r\n\r\n  const handleClear = () => {\r\n    setText('');\r\n    props.showalert(\"Text all clear\", \"success\");\r\n\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '));\r\n    props.showalert(\"Removed extra spaces\", \"success\");\r\n    document.title='Extra Spaces removed';\r\n\r\n  };\r\n\r\n  const textTRIM =()=>{\r\n    let words=text.trim();\r\n    let word_Length;\r\n    if (words.length===0) {\r\n      word_Length=0;\r\n    }\r\n    else{\r\n      word_Length=words.split(\"\").length;\r\n    }\r\n    props.showalert(\"trimming spaces\", \"success\");\r\n    return word_Length;\r\n  }\r\n\r\n  const [text, setText] = useState('Enter text here');\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" id=\"myBox\" onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#333' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} value={text} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleloClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={textTRIM}>Trimming Text</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").filter((element) => { return element !== \"\" }).length} words and {text.length} characters</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}